body{
    margin: 0;
    background-color: white;
}

div {
    text-align: center;
    position: relative;
}

.Opening-Img {
    max-width: 100%;
    max-height: 30vw;
    height: 30vw;
    width: 5000vw;
}

.Img {
    margin-top: 15vw; 
    max-width: 100%;
    max-height: 100%;
    height: 20vw;
    width: 20vw;
}

.Img img {
    background: #ccc;
    float: left;
    height: 100px;
    width: 150px;
    -webkit-transition: .25s;
    -moz-transition: .25s;
    -ms-transition: .25s;
    -o-transition: .25s;
    transition: .25s;
}

.Img:hover {
    height: 200px;
}

.Img:hover img {
    height: 67px;
    width: 100px;
}

.Img img:hover {
    height: 200px;
    width: 300px;
}

.Container { 
    display: grid; /* This makes the html element become a grid*/
    grid-template-columns: auto; /* Decides the positioning of the vertical lines of the grid */
    grid-template-rows: 25% 25% 25% 25%; /* Decides the positioning of the horizontal lines of the grid */
    grid-template-areas: /* This specifies named grid areas, establishing the cells in the grid and assigning them names. */
     "header header header header" 
     "main main main main"  
     "footer footer footer footer" 
    ;
}

.Grid-Container {
    display: grid;
    grid-template-columns: auto auto auto;
    padding: 10px;
}
/* The container has grid items for each column and row, grid-item allows you too style the grid items how you see fit. one example is a grid item spaning multiple columns/rows. */
.Grid-Item {
    font-size: 30px;
    text-align: center;
}

.Grid-Item-Text {
    padding: 20px;
    font-size: 15px;
    text-align: center;
}